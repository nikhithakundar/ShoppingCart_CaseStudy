{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  transform(value, filtetString, productName, category) {\n    const result = [];\n    //if the value is empty\n    if (!value || filtetString == '' || productName == '' || category == '') {\n      return value;\n    }\n    //if some value coming \n    value.forEach(a => {\n      if (a[productName].trim().toLowerCase().includes(filtetString.toLowerCase())) {\n        result.push(a);\n      } else if (a[category].trim().toLowerCase().includes(filtetString.toLowerCase())) {\n        result.push(a);\n      }\n    });\n    return result;\n  }\n}\nFilterPipe.ɵfac = function FilterPipe_Factory(t) {\n  return new (t || FilterPipe)();\n};\nFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: FilterPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,UAAU;EAErBC,SAAS,CAACC,KAAa,EAAEC,YAAoB,EAAEC,WAAkB,EAACC,QAAe;IAC/E,MAAMC,MAAM,GAAK,EAAE;IAEnB;IACA,IAAG,CAACJ,KAAK,IAAGC,YAAY,IAAE,EAAE,IAAEC,WAAW,IAAE,EAAE,IAAEC,QAAQ,IAAE,EAAE,EAAC;MAC5D,OAAOH,KAAK;;IAEd;IACAA,KAAK,CAACK,OAAO,CAAEC,CAAK,IAAG;MACrB,IAAGA,CAAC,CAACJ,WAAW,CAAC,CAACK,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,YAAY,CAACO,WAAW,EAAE,CAAC,EAAC;QAC1EJ,MAAM,CAACM,IAAI,CAACJ,CAAC,CAAC;OACjB,MACI,IAAGA,CAAC,CAACH,QAAQ,CAAC,CAACI,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,YAAY,CAACO,WAAW,EAAE,CAAC,EAAC;QAC5EJ,MAAM,CAACM,IAAI,CAACJ,CAAC,CAAC;;IAGhB,CAAC,CAAC;IACF,OAAOF,MAAM;EACf;;AApBaN,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;;QAAVA,UAAU;EAAAa;AAAA","names":["FilterPipe","transform","value","filtetString","productName","category","result","forEach","a","trim","toLowerCase","includes","push","pure"],"sourceRoot":"","sources":["C:\\Users\\nikhith\\Documents\\CaseStudyFrontEnd\\Shopping-Cart\\src\\app\\shared\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value : any[], filtetString: string, productName:string,category:string):any[] {\n    const result:any=[];\n\n    //if the value is empty\n    if(!value|| filtetString==''||productName==''||category==''){\n    return value;\n  }\n  //if some value coming \n  value.forEach((a:any)=>{\n    if(a[productName].trim().toLowerCase().includes(filtetString.toLowerCase())){\n      result.push(a);\n  }\n  else if(a[category].trim().toLowerCase().includes(filtetString.toLowerCase())){\n    result.push(a);\n}\n\n  });\n  return result;\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}