{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.cartItemList = [];\n    this.productList = new BehaviorSubject([]);\n    this.search = new BehaviorSubject(\"\");\n  }\n  getCartDetails() {\n    return this.httpClient.get(`http://localhost:3333/cart/getallcarts`);\n  }\n  getprdt() {\n    return this.productList.asObservable();\n  }\n  setprdt(product) {\n    this.cartItemList.push(...product);\n    this.productList.next(product);\n  }\n  addtoCart(product) {\n    this.cartItemList.push(product);\n    this.productList.next(this.cartItemList);\n    this.getTotalPrice();\n    console.log(this.cartItemList);\n  }\n  getTotalPrice() {\n    let grandTotal = 0;\n    this.cartItemList.map(a => {\n      grandTotal += a.total;\n    });\n    return grandTotal;\n  }\n  removeCartItem(product) {\n    this.cartItemList.map((a, index) => {\n      if (product.productId === a.productId) {\n        this.cartItemList.splice(index, 1);\n      }\n    });\n    //afetr removing particular product from cart ..no must decrease at carticon\n    this.productList.next(this.cartItemList);\n  }\n  removeAllCart() {\n    this.cartItemList = [];\n    this.productList.next(this.cartItemList);\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAKlD,OAAM,MAAOC,WAAW;EAMtBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IALvB,iBAAY,GAAK,EAAE;IACnB,gBAAW,GAAC,IAAIH,eAAe,CAAM,EAAE,CAAC;IAExC,WAAM,GAAC,IAAIA,eAAe,CAAS,EAAE,CAAC;EAEA;EAI7CI,cAAc;IACV,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAM,wCAAwC,CAAC;EAC1E;EAGHC,OAAO;IACL,OAAO,IAAI,CAACC,WAAW,CAACC,YAAY,EAAE;EACxC;EACAC,OAAO,CAACC,OAAW;IACjB,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,GAAGF,OAAO,CAAC;IAClC,IAAI,CAACH,WAAW,CAACM,IAAI,CAACH,OAAO,CAAC;EAChC;EACAI,SAAS,CAACJ,OAAW;IACnB,IAAI,CAACC,YAAY,CAACC,IAAI,CAACF,OAAO,CAAC;IAC/B,IAAI,CAACH,WAAW,CAACM,IAAI,CAAC,IAAI,CAACF,YAAY,CAAC;IACxC,IAAI,CAACI,aAAa,EAAE;IAEpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,YAAY,CAAC;EAChC;EACAI,aAAa;IACX,IAAIG,UAAU,GAAC,CAAC;IAChB,IAAI,CAACP,YAAY,CAACQ,GAAG,CAAEC,CAAK,IAAG;MAC3BF,UAAU,IAAEE,CAAC,CAACC,KAAK;IACvB,CAAC,CAAC;IACF,OAAOH,UAAU;EACnB;EAEAI,cAAc,CAACZ,OAAW;IACxB,IAAI,CAACC,YAAY,CAACQ,GAAG,CAAC,CAACC,CAAK,EAACG,KAAS,KAAG;MACvC,IAAGb,OAAO,CAACc,SAAS,KAAGJ,CAAC,CAACI,SAAS,EAAC;QACjC,IAAI,CAACb,YAAY,CAACc,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;;IAErC,CAAC,CAAC;IACF;IACA,IAAI,CAAChB,WAAW,CAACM,IAAI,CAAC,IAAI,CAACF,YAAY,CAAC;EAC1C;EAEAe,aAAa;IACX,IAAI,CAACf,YAAY,GAAC,EAAE;IACpB,IAAI,CAACJ,WAAW,CAACM,IAAI,CAAC,IAAI,CAACF,YAAY,CAAC;EAC1C;;AAlDWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA0B,SAAX1B,WAAW;EAAA2B,YAFV;AAAM","names":["BehaviorSubject","CartService","constructor","httpClient","getCartDetails","get","getprdt","productList","asObservable","setprdt","product","cartItemList","push","next","addtoCart","getTotalPrice","console","log","grandTotal","map","a","total","removeCartItem","index","productId","splice","removeAllCart","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\nikhith\\Documents\\CaseStudyFrontEnd\\Shopping-Cart\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  public cartItemList:any=[];\n  public productList=new BehaviorSubject<any>([]) ;\n\n  public search=new BehaviorSubject<string>(\"\") ;\n\n  constructor(private httpClient:HttpClient) { }\n\n  baseURL:\"http://localhost:3333/cart\";\n\n  getCartDetails():Observable<any>{\n      return this.httpClient.get<any>(`http://localhost:3333/cart/getallcarts`);\n     }\n\n\n  getprdt(){\n    return this.productList.asObservable();\n  }\n  setprdt(product:any){\n    this.cartItemList.push(...product)\n    this.productList.next(product);\n  }\n  addtoCart(product:any){\n    this.cartItemList.push(product);\n    this.productList.next(this.cartItemList);\n    this.getTotalPrice();\n\n    console.log(this.cartItemList);\n  } \n  getTotalPrice():number{\n    let grandTotal=0;\n    this.cartItemList.map((a:any)=>{\n        grandTotal+=a.total;\n    })\n    return grandTotal;\n  }\n\n  removeCartItem(product:any){\n    this.cartItemList.map((a:any,index:any)=>{\n      if(product.productId===a.productId){\n        this.cartItemList.splice(index,1);\n      }\n    })\n    //afetr removing particular product from cart ..no must decrease at carticon\n    this.productList.next(this.cartItemList); \n  }\n\n  removeAllCart(){\n    this.cartItemList=[];\n    this.productList.next(this.cartItemList);\n  }\n\n\n \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}