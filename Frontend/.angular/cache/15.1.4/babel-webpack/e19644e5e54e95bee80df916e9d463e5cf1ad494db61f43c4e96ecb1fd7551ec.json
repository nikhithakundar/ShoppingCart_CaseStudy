{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_form_2_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_2_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_2_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_2_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, LoginComponent_form_2_div_16_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵtemplate(2, LoginComponent_form_2_div_16_div_2_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors[\"minlength\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction LoginComponent_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1, 2);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_2_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const _r1 = i0.ɵɵreference(1);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(_r1.form.valid && ctx_r8.onLogin());\n    });\n    i0.ɵɵelementStart(2, \"h2\");\n    i0.ɵɵtext(3, \"Login Form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\")(5, \"label\", 3);\n    i0.ɵɵtext(6, \"UserName\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 4, 5);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_2_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.userlogin.username = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, LoginComponent_form_2_div_9_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"div\")(12, \"label\", 7);\n    i0.ɵɵtext(13, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 8, 9);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_2_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.userlogin.password = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, LoginComponent_form_2_div_16_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"br\")(18, \"br\");\n    i0.ɵɵelementStart(19, \"div\")(20, \"button\", 11);\n    i0.ɵɵtext(21, \"Login\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(1);\n    const _r2 = i0.ɵɵreference(8);\n    const _r4 = i0.ɵɵreference(15);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.userlogin.username)(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, _r1.submitted && _r2.errors));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors && _r1.submitted);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.userlogin.password)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, _r1.submitted && _r4.errors));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors && _r1.submitted);\n  }\n}\nexport class LoginComponent {\n  constructor(authService, storageService, router) {\n    this.authService = authService;\n    this.storageService = storageService;\n    this.router = router;\n    this.userlogin = {\n      username: '',\n      password: ''\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.storageService.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n  //      onLogin(){\n  //       this.authService.login(this.userlogin).subscribe(data=>{\n  //         console.log(data);\n  //         this.router.navigate(['product']);\n  //       })\n  //     }\n  // }\n  onLogin() {\n    this.authService.login(this.userlogin).subscribe(\n    //(username, password).subscribe({\n    //(username, password).subscribe({\n    data => {\n      this.storageService.saveToken(data.accessToken);\n      this.storageService.saveUser(data);\n      this.isLoginFailed = false;\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n      this.reloadPage();\n      this.router.navigate(['/home']);\n    }, err => {\n      this.errorMessage = err.error.message;\n      this.isLoginFailed = true;\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"placeholder\", \"Enter your name\", \"required\", \"\", 1, \"textboxs\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", \"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter your password\", \"required\", \"\", \"minlength\", \"6\", 1, \"textboxs\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"id\", \"btn1\", \"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"role\", \"alert\", 1, \"invalid-feedback\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\");\n      i0.ɵɵtemplate(2, LoginComponent_form_2_Template, 22, 10, \"form\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.NgModel, i5.NgForm],\n  styles: [\"h2[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n  }\\r\\n  form[_ngcontent-%COMP%]{\\r\\n    background-color:#3bb83b; \\r\\n    padding: 20px;\\r\\n    margin : 50px auto ;\\r\\n    margin-top: 90px;\\r\\n    border-radius: 30px;\\r\\n    width: 400px;\\r\\n  }\\r\\n  .textboxs[_ngcontent-%COMP%]{\\r\\n    border-color: #AED6F1;\\r\\n    margin-top: 5px;\\r\\n    padding: 15px;\\r\\n    border-radius: 7px;\\r\\n    box-shadow: 20px;\\r\\n    display: block;\\r\\n    width: 90%;\\r\\n    height: 5px;\\r\\n  }\\r\\n  \\r\\n  input.ng-invalid.ng-touched[_ngcontent-%COMP%]{\\r\\n    border: 2px solid red;\\r\\n  }\\r\\n  small[_ngcontent-%COMP%]{\\r\\n    color: red;\\r\\n  }\\r\\n  #btn1[_ngcontent-%COMP%]{\\r\\n    border-radius: 4px;\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    background-color: blue;\\r\\n  }\\r\\n  \\r\\n  body[_ngcontent-%COMP%]{\\r\\n    margin: auto;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtFQUNwQjtFQUNBO0lBQ0Usd0JBQXdCO0lBQ3hCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixZQUFZO0VBQ2Q7RUFDQTtJQUNFLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFVBQVU7SUFDVixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxxQkFBcUI7RUFDdkI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxhQUFhO0lBQ2Isc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsWUFBWTtFQUNkIiwic291cmNlc0NvbnRlbnQiOlsiaDJ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIGZvcm17XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMzYmI4M2I7IFxyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG1hcmdpbiA6IDUwcHggYXV0byA7XHJcbiAgICBtYXJnaW4tdG9wOiA5MHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuICAgIHdpZHRoOiA0MDBweDtcclxuICB9XHJcbiAgLnRleHRib3hze1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjQUVENkYxO1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcclxuICAgIGJveC1zaGFkb3c6IDIwcHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBoZWlnaHQ6IDVweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVke1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xyXG4gIH1cclxuICBzbWFsbHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgfVxyXG4gICNidG4xe1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxuICB9XHJcbiAgXHJcbiAgYm9keXtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ctx_r8","LoginComponent","constructor","authService","storageService","router","username","password","ngOnInit","getToken","isLoggedIn","roles","getUser","onLogin","login","userlogin","subscribe","data","saveToken","accessToken","saveUser","isLoginFailed","reloadPage","navigate","err","errorMessage","error","message","window","location","reload","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\nikhith\\Documents\\CaseStudyFrontEnd\\Shopping-Cart\\src\\app\\login\\login.component.html","C:\\Users\\nikhith\\Documents\\CaseStudyFrontEnd\\Shopping-Cart\\src\\app\\login\\login.component.ts"],"sourcesContent":["<!-- <nav class=\"navbar navbar-dark bg-primary text-light fixed-top\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" routerLink=\"\">\n        <a class=\"navbar-brand\" href=\"#\">\n          <img src=\n  \"https://www.pngitem.com/pimgs/m/45-459393_cart-shopping-cart-icon-png-white-transparent-png.png\"\n          width=\"90\" height=\"68\" alt=\"\">\n      </a>\n        Shopping Cart</a>\n      <div class=\"navbar-nav-scroll\">\n        <ul class=\"navbar-nav flex-row\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"/login\">Log in</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" routerLink=\"/register\">Sign up</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav> -->\n  \n  <body>\n    <div>\n      <form  \n      *ngIf=\"!isLoggedIn\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onLogin()\"\n      #f=\"ngForm\"\n      novalidate\n      >\n        <h2>Login Form</h2>\n        <div>\n        <label for=\"username\">UserName</label>\n        <input type=\"text\" \n        name=\"username\" \n        class=\"textboxs \"\n        id=\"username\" \n        placeholder=\"Enter your name\"\n        [(ngModel)]=\"userlogin.username\"\n        required\n        #username=\"ngModel\"\n        [ngClass]=\"{ 'is-invalid': f.submitted && username.errors }\">\n  \n        <div class=\"alert alert-danger\"\n        role=\"alert\"\n        *ngIf=\"username.errors && f.submitted\" class=\"invalid-feedback\">\n          Username is required!\n        </div>\n      </div><br>\n  \n      <div>\n        <label for=\"password\">Password</label>\n        <input type=\"password\"\n        class=\"textboxs\"\n        id=\"password\"\n        name=\"password\"\n        placeholder=\"Enter your password\"\n        [(ngModel)]=\"userlogin.password\"\n        required\n        minlength=\"6\"\n        #password=\"ngModel\"\n        [ngClass]=\"{ 'is-invalid': f.submitted && password.errors }\">\n\n          <div *ngIf=\"password.errors && f.submitted\" class=\"invalid-feedback\">\n            <div *ngIf=\"password.errors['required']\">Password is required</div>\n            <div *ngIf=\"password.errors['minlength']\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n  \n      </div><br>\n      <br>\n      <div>\n        <button  class=\"btn btn-success\" id=\"btn1\" type=\"submit\">Login</button>\n      </div>  \n  \n      </form>\n    </div>\n    <!-- <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n        Logged in as {{ roles }}.\n      </div>  -->\n  </body>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { StorageService } from '../_services/storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private authService:AuthService,private storageService: StorageService,\n    private router:Router) { }\n  \n  ngOnInit(): void {\n    if (this.storageService.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n  userlogin:any = {\n     username:'',\n     password:''\n    };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n//      onLogin(){\n//       this.authService.login(this.userlogin).subscribe(data=>{\n//         console.log(data);\n//         this.router.navigate(['product']);\n//       })\n//     }\n   \n// }\n\nonLogin(){\n  \n  this.authService.login(this.userlogin).subscribe(                        //(username, password).subscribe({\n    data => {\n      this.storageService.saveToken(data.accessToken);\n      this.storageService.saveUser(data);\n\n      this.isLoginFailed=false;\n      this.isLoggedIn=true;\n      \n      \n      this.roles=this.storageService.getUser().roles;\n      this.reloadPage();\n      this.router.navigate(['/home']);\n      \n    },\n    err=>{\n      this.errorMessage=err.error.message;\n      this.isLoginFailed=true;\n    }\n  );\n}\n\nreloadPage(): void {\n  window.location.reload();\n}\n\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}