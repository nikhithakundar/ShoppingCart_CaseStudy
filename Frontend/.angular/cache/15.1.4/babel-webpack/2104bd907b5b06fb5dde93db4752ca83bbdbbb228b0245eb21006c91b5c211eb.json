{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"../_services/storage.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Logged in as \", ctx_r0.roles, \". \");\n  }\n}\nexport class LoginComponent {\n  constructor(router, authService, storageService) {\n    this.router = router;\n    this.authService = authService;\n    this.storageService = storageService;\n    this.userlogin = {\n      username: '',\n      password: ''\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n  //      onLogin(){\n  //       this.authService.login(this.userlogin).subscribe(data=>{\n  //         console.log(data);\n  //         this.router.navigate(['product']);\n  //       })\n  //     }\n  // }\n  onLogin() {\n    const {\n      username,\n      password\n    } = this.userlogin;\n    this.authService.login({\n      username,\n      password\n    }).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.StorageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 3,\n  consts: [[\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"id\", \"username\", \"placeholder\", \"Enter your name\", 1, \"textboxs\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter your password\", 1, \"textboxs\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"btn1\", \"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"alert\", \"alert-success\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\")(2, \"form\")(3, \"h2\");\n      i0.ɵɵtext(4, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 0);\n      i0.ɵɵtext(7, \"UserName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.userlogin.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\", 2);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.userlogin.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"br\")(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\")(17, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.userlogin.username);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.userlogin.password);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAqDIA,8BAAoD;IAChDA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,2DACF;;;AC7CN,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,MAAa,EAASC,WAAuB,EAASC,cAA8B;IAApF,WAAM,GAANF,MAAM;IAAgB,gBAAW,GAAXC,WAAW;IAAqB,mBAAc,GAAdC,cAAc;IAQxF,cAAS,GAAO;MACbC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC;KACT;IAEH,eAAU,GAAG,KAAK;IAClB,kBAAa,GAAG,KAAK;IACrB,iBAAY,GAAG,EAAE;IACjB,UAAK,GAAa,EAAE;EAhBwF;EAE5GC,QAAQ;IACN,IAAI,IAAI,CAACH,cAAc,CAACI,UAAU,EAAE,EAAE;MACpC,IAAI,CAACA,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACL,cAAc,CAACM,OAAO,EAAE,CAACD,KAAK;;EAEpD;EAWF;EACA;EACA;EACA;EACA;EACA;EAEA;EAEAE,OAAO;IACL,MAAM;MAAEN,QAAQ;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACM,SAAS;IAC7C,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC;MAACR,QAAQ;MAAEC;IAAQ,CAAC,CAAC,CAACQ,SAAS,CAAC;MACrDC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACZ,cAAc,CAACa,QAAQ,CAACD,IAAI,CAAC;QAElC,IAAI,CAACE,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACV,UAAU,GAAG,IAAI;QACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACL,cAAc,CAACM,OAAO,EAAE,CAACD,KAAK;QAChD,IAAI,CAACU,UAAU,EAAE;MACnB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACD,KAAK,CAACG,OAAO;QACrC,IAAI,CAACL,aAAa,GAAG,IAAI;MAC3B;KACD,CAAC;EACJ;EAEAC,UAAU;IACRK,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;;AAhDa1B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDezBhC,4BAAM;MAGIA,0BAAU;MAAAA,iBAAK;MACnBA,2BAAK;MACiBA,wBAAQ;MAAAA,iBAAQ;MACtCA,gCAGiC;MAAjCA;QAAA;MAAA,EAAgC;MAHhCA,iBAGiC;MAC7BA,qBAAI;MAEVA,4BAAK;MACmBA,yBAAQ;MAAAA,iBAAQ;MACtCA,iCAKiC;MAAjCA;QAAA;MAAA,EAAgC;MALhCA,iBAKiC;MAC7BA,sBAAI;MAEVA,4BAAK;MACqDA;QAAA,OAASiC,aAAS;MAAA,EAAC;MAACjC,sBAAK;MAAAA,iBAAS;MAK9FA,iEAEQ;MACVA,iBAAO;;;MAtBDA,eAAgC;MAAhCA,gDAAgC;MAUhCA,eAAgC;MAAhCA,gDAAgC;MASFA,eAAgB;MAAhBA,qCAAgB","names":["i0","LoginComponent","constructor","router","authService","storageService","username","password","ngOnInit","isLoggedIn","roles","getUser","onLogin","userlogin","login","subscribe","next","data","saveUser","isLoginFailed","reloadPage","error","err","errorMessage","message","window","location","reload","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\nikhith\\Documents\\CaseStudyFrontEnd\\Shopping-Cart\\src\\app\\login\\login.component.html","C:\\Users\\nikhith\\Documents\\CaseStudyFrontEnd\\Shopping-Cart\\src\\app\\login\\login.component.ts"],"sourcesContent":["<!-- <nav class=\"navbar navbar-dark bg-primary text-light fixed-top\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" routerLink=\"\">\n        <a class=\"navbar-brand\" href=\"#\">\n          <img src=\n  \"https://www.pngitem.com/pimgs/m/45-459393_cart-shopping-cart-icon-png-white-transparent-png.png\"\n          width=\"90\" height=\"68\" alt=\"\">\n      </a>\n        Shopping Cart</a>\n      <div class=\"navbar-nav-scroll\">\n        <ul class=\"navbar-nav flex-row\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"/login\">Log in</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" routerLink=\"/register\">Sign up</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav> -->\n  \n  <body>\n    <div>\n      <form>\n        <h2>Login Form</h2>\n        <div>\n        <label for=\"username\">UserName</label>\n        <input type=\"text\" name=\"username\" class=\"textboxs\"\n        id=\"username\" \n        placeholder=\"Enter your name\"\n        [(ngModel)]=\"userlogin.username\">\n      </div><br>\n  \n      <div>\n        <label for=\"password\">Password</label>\n        <input type=\"password\"\n        class=\"textboxs\"\n        id=\"password\"\n        name=\"password\"\n        placeholder=\"Enter your password\"\n        [(ngModel)]=\"userlogin.password\">\n      </div><br>\n      <br>\n      <div>\n        <button class=\"btn btn-success\" id=\"btn1\" type=\"submit\" (click)=\"onLogin()\">Login</button>\n      </div>  \n  \n      </form>\n    </div>\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n        Logged in as {{ roles }}.\n      </div>\n  </body>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { StorageService } from '../_services/storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private router:Router,private authService:AuthService,private storageService: StorageService) { }\n  \n  ngOnInit(): void {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n  userlogin:any = {\n     username:'',\n     password:''\n    };\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n//      onLogin(){\n//       this.authService.login(this.userlogin).subscribe(data=>{\n//         console.log(data);\n//         this.router.navigate(['product']);\n//       })\n//     }\n   \n// }\n\nonLogin(){\n  const { username, password } = this.userlogin;\n  this.authService.login({username, password}).subscribe({                        //(username, password).subscribe({\n    next: data => {\n      this.storageService.saveUser(data);\n\n      this.isLoginFailed = false;\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n      this.reloadPage();\n    },\n    error: err => {\n      this.errorMessage = err.error.message;\n      this.isLoginFailed = true;\n    }\n  });\n}\n\nreloadPage(): void {\n  window.location.reload();\n}\n\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}