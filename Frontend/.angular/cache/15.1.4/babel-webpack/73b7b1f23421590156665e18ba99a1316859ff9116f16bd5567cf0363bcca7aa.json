{"ast":null,"code":"import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/storage.service\";\nconst TOKEN_KEY_HEADER = 'Authorization';\nexport class HttpRequestInterceptor {\n  constructor(token) {\n    this.token = token;\n  }\n  intercept(req, next) {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({\n        headers: req.headers.set(TOKEN_KEY_HEADER, 'Bearer ' + token)\n      });\n    }\n    return next.handle(authReq);\n  }\n}\nHttpRequestInterceptor.ɵfac = function HttpRequestInterceptor_Factory(t) {\n  return new (t || HttpRequestInterceptor)(i0.ɵɵinject(i1.StorageService));\n};\nHttpRequestInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpRequestInterceptor,\n  factory: HttpRequestInterceptor.ɵfac\n});\nexport const httpInterceptorProviders = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: HttpRequestInterceptor,\n  multi: true\n}];","map":{"version":3,"mappings":"AACA,SAA+DA,iBAAiB,QAAQ,sBAAsB;;;AAI9G,MAAMC,gBAAgB,GAAC,eAAe;AAGtC,OAAM,MAAOC,sBAAsB;EAEjCC,YAAoBC,KAAoB;IAApB,UAAK,GAALA,KAAK;EAAiB;EAC1CC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IACjD,IAAIC,OAAO,GAACF,GAAG;IACf,MAAMF,KAAK,GAAC,IAAI,CAACA,KAAK,CAACK,QAAQ,EAAE;IACjC,IAAGL,KAAK,IAAE,IAAI,EAAC;MAEdI,OAAO,GAACF,GAAG,CAACI,KAAK,CAAC;QAACC,OAAO,EAACL,GAAG,CAACK,OAAO,CAACC,GAAG,CAACX,gBAAgB,EAAC,SAAS,GAACG,KAAK;MAAC,CAAC,CAAC;;IAE/E,OAAOG,IAAI,CAACM,MAAM,CAACL,OAAO,CAAC;EAC5B;;AAXWN,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAY,SAAtBZ,sBAAsB;AAAA;AAcnC,OAAO,MAAMa,wBAAwB,GAAG,CACtC;EAAEC,OAAO,EAAEhB,iBAAiB;EAAEiB,QAAQ,EAAEf,sBAAsB;EAAEgB,KAAK,EAAE;AAAI,CAAE,CAC9E","names":["HTTP_INTERCEPTORS","TOKEN_KEY_HEADER","HttpRequestInterceptor","constructor","token","intercept","req","next","authReq","getToken","clone","headers","set","handle","factory","httpInterceptorProviders","provide","useClass","multi"],"sourceRoot":"","sources":["C:\\Users\\nikhith\\Documents\\CaseStudyFrontEnd\\Shopping-Cart\\src\\app\\_helpers\\http.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageService } from '../_services/storage.service';\r\n\r\nconst TOKEN_KEY_HEADER='Authorization';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private token:StorageService){}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n   let authReq=req;\r\n   const token=this.token.getToken();\r\n   if(token!=null){\r\n    \r\n    authReq=req.clone({headers:req.headers.set(TOKEN_KEY_HEADER,'Bearer '+token)});\r\n   }\r\n   return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\r\n];\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}